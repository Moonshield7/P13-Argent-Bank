swagger: '2.0'
info:
  title: Argent Bank API documentation
  description: Contains all available API endpoints in the v1 and the ones needed for the v2
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
### ADDED PART OF THE API ###
  /transactions/{id}:
    get:
      tags:
        - Transactions Module
      summary: Retrieve one transaction
      description:  API to fetch one of the transactions
      parameters:
        - name: id
          in: path
          description: transaction id
          required: true
          type: integer
      responses:
        '200':
          description: Transaction retrieved Successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad request, transaction ID must be an integer and larger than 0
        '404':
          description: A transaction with the specified ID was not found
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Modify a transaction
      description: API for updating a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  # SHOULD NOT BE IMPLEMENTED
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a transaction 
      description: API for deleting permanently the selected transaction
      parameters:
        - in: path
          name: id
          description: id of the transaction that will be deleted
          required: true
          type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      responses:
        '200':
          description: Transaction deleted successfully
        '400':
          description: Invalid token or id supplied
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
      
  /transactions:
    get:
      tags:
        - Transactions Module
      summary: Transaction API
      description:  API for all of the transactions
      responses:
        '200':
          description: Transactions retrieved Successfully
          schema:
            $ref: '#definitions/ArrayOfTransactions'
        '400':
          description: Bad request, user ID must be a string composed of the user's first and last name
        '404':
          description: A user with the specified ID was not found
    post:
      security:
        - Bearer: []
      produces:
        - application/json
      tags:
        - Transactions Module
      summary: Create a transaction
      description: API to create a new transaction
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '201':
          description: Transaction added successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad request, make sure the object you are trying to create match the syntax
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
        # Added property : user id
      id:
        type: string
        description: user id
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  TransactionResponse:
    type: object
    properties: 
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties: 
          transaction:
            type: object
            properties:
              schema:
                $ref: '#/definitions/Transaction'
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  ArrayOfTransactions:
    type: array
    items:
      $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      idUser:
        type: string
        example: "tonystark"
      id:
        type: string
        example: "tr1"
      date:
        type: string
        example: "June 20th, 2020"
      description:
        type: string
        example: "Golden Sun Bakery"
      amount:
        type: number
        example: "5.05"
      balance:
        type: number
        example: "2082.79"
      transactionType:
        type: string
        example: "Electronic"
      category:
        type: string
        example: "Food"
      notes:
        type: string
        example: "Buying dinner to mom"